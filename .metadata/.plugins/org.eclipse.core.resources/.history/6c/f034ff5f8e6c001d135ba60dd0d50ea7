package LeetCodeSort;

import java.util.Arrays;

//https://leetcode.com/problems/maximum-product-of-three-numbers/
//628. Maximum Product of Three Numbers
//Input: nums = [1,2,3]
//Output: 6
public class LeetCode628 {

	public static void main(String[] args) {

		int[] arr= {-100,-2,-3,1};
		System.out.println(maximumProduct(arr));

	}

	static int maximumProduct(int[] nums) {
		selectionSort(nums);
		int n=nums.length-1;
		int ans=Integer.MIN_VALUE;
		ans=Math.max(nums[0]*nums[1]*nums[n],nums[n]*nums[n-1]*nums[n-2]);
		return ans;

	}

	static void selectionSort(int[] arr) {
		for (int i = 0; i < arr.length; i++) {
			int lastIndex=arr.length-i-1;
			int maxIndex=getMaxIndex(arr,0,lastIndex);
			swap(arr, lastIndex, maxIndex);
		}
	}

	static int getMaxIndex(int[] arr, int start, int end) {
		int max=start;
		for (int j = 0; j <=end; j++) {
			if(arr[j]>arr[max]) {
				max=j;
			}
		}
		return max;
	}

	static void swap(int[] arr,int first,int second) {
		int temp=arr[first];
		arr[first]=arr[second];
		arr[second]=temp;
	}
}




