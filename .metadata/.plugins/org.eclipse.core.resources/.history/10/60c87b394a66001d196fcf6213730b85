package BinarySearch;

public class LeetCode33_binary {

	public static void main(String[] args) {
int []arr= {4,5,6,7,0,1,2};
findPivot(arr);
System.out.println(findPivot(arr));

	}

	
	 public int search(int[] nums, int target) {
		int pivot= findPivot(nums);
	  
	 }
	 
	 static int binarySearch(int [] arr,int target, int start , int end) {
		 while(start<=end) {
			 int mid=start+(end-start)/2;
			 if(target>arr[mid]) {
				 start=mid+1;
			 }
			 else if(target<arr[mid]) {
				 end=mid-1;
			 }
			 else return mid;
		 }
		 return -1;
	 }
	 
	static int findPivot(int[] arr) {
		int start=0;
		int end=arr.length-1;
		while(start<=end) {
			int mid=start+(end-start)/2;

			if(mid<end && arr[mid]>arr[mid+1]) {
				return mid;
			}
			if(arr[mid]<arr[mid-1]) {
				return mid-1;
			}
			if(start>=mid) {
				end=mid-1;
			}
			else {  //start<=mid
				start=mid+1;
			}
		}
		return -1;
	}

}
