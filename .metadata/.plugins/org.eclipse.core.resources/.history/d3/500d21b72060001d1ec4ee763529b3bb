package LeetCodeArrays;
	import java.util.ArrayList;
//https://leetcode.com/problems/flipping-an-image/
/*
Input: image = [[1,1,0],[1,0,1],[0,0,0]]
Output: [[1,0,0],[0,1,0],[1,1,1]]
Explanation: First reverse each row: [[0,1,1],[1,0,1],[0,0,0]].
Then, invert the image: [[1,0,0],[0,1,0],[1,1,1]]*/
import java.util.Arrays;
import java.util.List;

public class LeetCode832 {

	public static void main(String[] args) {
		int [][] nums= {{1,0,0},
				{0,1,0},
				{1,1,1}};
		System.out.println(Arrays.toString(flipAndInvertImage(nums)));

	}
	static int[][] flipAndInvertImage(int[][] image) {
	    public List<Integer> luckyNumbers(int[][] matrix) {
	        int m = matrix.length, n = matrix[0].length;
	        int[] row = new int[m];
	        int[] col = new int[n];

	        for (int i = 0; i < m; i++) {
	            for (int j = 0; j < n; j++) {
	                if (matrix[i][j] < matrix[i][row[i]]) {
	                    row[i] = j;
	                }

	                if (matrix[i][j] > matrix[col[j]][j]) {
	                    col[j] = i;
	                }
	            }
	        }

	        List<Integer> res = new ArrayList<>();
	        for (int i = 0; i < m; i++) {
	            int j = row[i];
	            if (col[j] == i) {
	                res.add(matrix[i][j]);
	            }
	        }

	        return res;
	    }}
}
